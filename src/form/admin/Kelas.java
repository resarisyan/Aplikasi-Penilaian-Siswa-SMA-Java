/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package form.admin;

import database.KoneksiDB;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author resar
 */

public class Kelas extends javax.swing.JInternalFrame {

    /**
     * Creates new form Profile
     */
    KoneksiDB k = new KoneksiDB();
    Connection con = k.connection;
    String idKelas = "";
    String namaTabel = "kelas";

    public Kelas() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        showKelas(); 
        showWaliKelas();
        tblKelas.setAutoCreateRowSorter(true);
    }
    
    public void showKelas(){
        
        DefaultTableModel model = (DefaultTableModel) tblKelas.getModel();
        
        Statement st;
        ResultSet rs;
        
        String query = "SELECT k.kode_kelas, k.tingkat, k.jurusan, d.nama FROM kelas as k INNER JOIN dataguru as d ON k.wali_kelas = d.nip";
        String status = null;

        try {
            st = con.createStatement();
            rs = st.executeQuery(query);
            
            Object[] row = new Object[5];
            int no = 0;
            while(rs.next()){
                row[0] = ++no;
                row[1] = rs.getString("kode_kelas");
                row[2] = rs.getString("tingkat");
                row[3] = rs.getString("jurusan");
                row[4] = rs.getString("nama");
                model.addRow(row);
            }            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void showWaliKelas(){
        String namaGuru;
        Statement st;
        ResultSet rs;
        String query = "SELECT d.nama,d.nip FROM dataguru as d LEFT JOIN kelas as k on d.nip = k.wali_kelas WHERE k.wali_kelas IS NULL";
        try{
            st = con.createStatement();
            rs = st.executeQuery(query);
            while(rs.next()){
                namaGuru = rs.getString("nip") + "-" + rs.getString("nama");
                cbWaliKelas.addItem(namaGuru);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void executeSQLQuery(String query, String pesan, int check)
    {
        Statement st;
        ResultSet rs;
        String queryCheck = "call checkKodeKelas('"+ tfKodeKelas.getText() +"')";
        
        try{
            st = con.createStatement();
            rs = st.executeQuery(queryCheck);
            if(check == 1){
                if(!rs.next()){
                    if(st.executeUpdate(query)>0){
                        RefreshPage();
                        RefreshWaliKelas();
                        JOptionPane.showMessageDialog(null, "Data " + pesan+ " Succesfully");
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Data Not " + pesan);            
                    }
                } else{
                    JOptionPane.showMessageDialog(null, "Kode Kelas Sudah Tedaftar");
                }
            } else{
                if(st.executeUpdate(query)>0){
                    RefreshPage();
                    RefreshWaliKelas();
                    JOptionPane.showMessageDialog(null, "Data " + pesan+ " Succesfully");
                } 
                else{
                    JOptionPane.showMessageDialog(null, "Data Not " + pesan);
                }
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public void RefreshPage(){
        DefaultTableModel model = (DefaultTableModel)tblKelas.getModel();
        model.setRowCount(0);
        showKelas();
    }
    
    public void RefreshWaliKelas(){
        cbWaliKelas.removeAllItems();
        showWaliKelas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblKelas = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblKodeKelas = new javax.swing.JLabel();
        tfKodeKelas = new javax.swing.JTextField();
        lblKelas = new javax.swing.JLabel();
        cbKelas = new javax.swing.JComboBox<>();
        cbJurusan = new javax.swing.JComboBox<>();
        lblJurusan = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        lblWaliKelas = new javax.swing.JLabel();
        cbWaliKelas = new javax.swing.JComboBox<>();

        setFocusCycleRoot(false);
        setFocusable(false);
        setPreferredSize(new java.awt.Dimension(730, 480));
        setRequestFocusEnabled(false);

        tblKelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO", "KODE KELAS", "KELAS", "JURUSAN", "WALI KELAS"
            }
        ));
        tblKelas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblKelas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKelasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKelas);

        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-add.png"))); // NOI18N
        btnAdd.setText("TAMBAH");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-making_notes.png"))); // NOI18N
        btnEdit.setText("EDIT");
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-delete_trash.png"))); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblKodeKelas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblKodeKelas.setText("KODE KELAS:");

        tfKodeKelas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfKodeKelasKeyTyped(evt);
            }
        });

        lblKelas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblKelas.setText("KELAS:");

        cbKelas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10", "11", "12" }));

        cbJurusan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "IPA", "IPS", "BAHASA" }));

        lblJurusan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblJurusan.setText("JURUSAN:");

        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-reset.png"))); // NOI18N
        btnReset.setText("RESET");
        btnReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        lblWaliKelas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblWaliKelas.setText("WALI KELAS:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblKodeKelas)
                            .addComponent(lblKelas)
                            .addComponent(lblJurusan)
                            .addComponent(lblWaliKelas))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbWaliKelas, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbKelas, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfKodeKelas, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbJurusan, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(80, 80, 80))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblKodeKelas)
                            .addComponent(tfKodeKelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblKelas)
                            .addComponent(cbKelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblJurusan)
                            .addComponent(cbJurusan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWaliKelas)
                            .addComponent(cbWaliKelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAdd)
                            .addComponent(btnEdit))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelete)
                            .addComponent(btnReset)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblKelasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKelasMouseClicked
        DefaultTableModel model = (DefaultTableModel)tblKelas.getModel();
        int i = tblKelas.getSelectedRow();
        String kodeKelas = (model.getValueAt(i, 1).toString());
        Statement st;
        ResultSet rs;
        
        String query = "SELECT * FROM kelas WHERE kode_kelas ="+kodeKelas;
        try {
            st = con.createStatement();
            rs = st.executeQuery(query);
            String nipGuru[];
            while(rs.next()){
                idKelas = (rs.getString("id_kelas"));
                System.out.println(idKelas);
                tfKodeKelas.setText(rs.getString("kode_kelas"));
                if(rs.getString("tingkat").equals("10")){
                    cbKelas.setSelectedIndex(0);
                } else if(rs.getObject("tingkat").equals("11")){
                    cbKelas.setSelectedIndex(1);
                } else {
                    cbKelas.setSelectedIndex(2);
                }
                
                for(int x=0; x<cbWaliKelas.getItemCount(); x++){
                    nipGuru = cbWaliKelas.getItemAt(x).split("\\-");
                    if(rs.getString("wali_kelas").equals(nipGuru[0])){
                        cbWaliKelas.setSelectedIndex(x);
                    }
                }

                if(rs.getObject("jurusan").toString().toLowerCase().equals("ipa")){
                    cbJurusan.setSelectedIndex(0);
                } else if(rs.getObject("jurusan").toString().toLowerCase().equals("ips")){
                    cbJurusan.setSelectedIndex(1);
                } else if(rs.getObject("jurusan").toString().toLowerCase().equals("bahasa")){
                    cbJurusan.setSelectedIndex(2);
                }
            }
            
//            rs = st.executeQuery(query2);
            
        } catch (Exception e) {
            e.printStackTrace();
        }

//        tfNPM.setText(model.getValueAt(i, 0).toString());
//        tfNama.setText(model.getValueAt(i, 1).toString());
//        cbAngkatan.getModel().setSelectedItem(model.getValueAt(i, 2).toString());

    }//GEN-LAST:event_tblKelasMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if(checkField()){
            String[] waliKelas = cbWaliKelas.getSelectedItem().toString().split("\\-");
            String query = "INSERT INTO `kelas`(`kode_kelas`, `tingkat`, `jurusan`, `wali_kelas`)"+
                " VALUES ('"+tfKodeKelas.getText()+"', '"+cbKelas.getSelectedItem()+"', '"+cbJurusan.getSelectedItem().toString()+"', '"+waliKelas[0]+"')";
            executeSQLQuery(query, "Inserted", 1);
        } else{
            JOptionPane.showMessageDialog(this, "Isi Semua Field!");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        if(idKelas.isEmpty()){
            JOptionPane.showMessageDialog(this, "Pilih Data Yang Ingin Di Edit!");
        } else{
            if(checkField()){
                int conf;
                conf = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Ingin Mengedit Data Ini?",
                    "Warning",JOptionPane.WARNING_MESSAGE);
                if(conf == 0){
                    String[] waliKelas = cbWaliKelas.getSelectedItem().toString().split("\\-");
                    String query = "UPDATE `kelas` SET `kode_kelas` = '" +tfKodeKelas.getText()+"', "+
                            "`tingkat` = '"+cbKelas.getSelectedItem()+"', "+
                            "`jurusan` = '"+cbJurusan.getSelectedItem().toString()+"', "+
                            "`wali_kelas` = '"+waliKelas[0]+"' "+
                            "WHERE `id_kelas` ="+idKelas;
                    executeSQLQuery(query, "Updated", 2); 
                }
            } else{
                JOptionPane.showMessageDialog(this, "Isi Semua Field!");
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if(idKelas.isEmpty())
         {
             JOptionPane.showMessageDialog(this, "Pilih Data Yang Ingin Di Hapus!");          
         }
         else{
            int conf;
            conf = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Ingin Menghapus Data Ini?",
                    "Warning",JOptionPane.WARNING_MESSAGE);
            if(conf == 0){
                String query = "DELETE FROM `kelas` WHERE id_kelas="+idKelas;
                executeSQLQuery(query, "Deleted", 3);
            }
         }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        tfKodeKelas.setText("");
        cbJurusan.setSelectedIndex(0);
        cbKelas.setSelectedIndex(0);
        cbWaliKelas.setSelectedIndex(0);
    }//GEN-LAST:event_btnResetActionPerformed

    private void tfKodeKelasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfKodeKelasKeyTyped
        char c = evt.getKeyChar();
        if ( ((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
                  evt.consume();
        }
    }//GEN-LAST:event_tfKodeKelasKeyTyped

    public boolean checkField(){
        if(
                tfKodeKelas.getText().trim().isEmpty() ||
                cbKelas.getSelectedItem().toString().trim().isEmpty() ||
                cbJurusan.getSelectedItem().toString().trim().isEmpty() ||
                cbWaliKelas.getSelectedItem().toString().trim().isEmpty()
                ) {
            return false;
        } else{
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox<String> cbJurusan;
    private javax.swing.JComboBox<String> cbKelas;
    private javax.swing.JComboBox<String> cbWaliKelas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblJurusan;
    private javax.swing.JLabel lblKelas;
    private javax.swing.JLabel lblKodeKelas;
    private javax.swing.JLabel lblWaliKelas;
    private javax.swing.JTable tblKelas;
    private javax.swing.JTextField tfKodeKelas;
    // End of variables declaration//GEN-END:variables
}
