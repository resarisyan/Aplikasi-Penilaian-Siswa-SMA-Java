/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package form.admin;

import database.KoneksiDB;
import form.DynamicArrayInteger;
import form.Utility;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.sql.Date;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author resar
 */

public class Siswa extends javax.swing.JInternalFrame {

    /**
     * Creates new form Profile
     */
    KoneksiDB k = new KoneksiDB();
    Connection con = k.connection;
    String nisSiswa = "";
    DynamicArrayInteger idKelas = new DynamicArrayInteger(1);
    DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");


    public Siswa() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI)this.getUI();
        ui.setNorthPane(null);
        showSiswa();
        showKelasList();
        tblSiswa.setAutoCreateRowSorter(true);
    }
    
    public void showKelasList(){
        String namaKelas;
        Statement st;
        ResultSet rs;
        String query = "SELECT * FROM kelas ORDER BY tingkat ASC";
        try{
            st = con.createStatement();
            rs = st.executeQuery(query);
            while(rs.next()){
                idKelas.insert(rs.getInt("id_kelas"));
                namaKelas = rs.getString("tingkat") + "-" + rs.getString("jurusan") + "-" + rs.getString("kode_kelas");
                cbKelas.addItem(namaKelas);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void showSiswa(){
        
        DefaultTableModel model = (DefaultTableModel) tblSiswa.getModel();
        
        Statement st;
        ResultSet rs;
        
        String query = "SELECT * FROM datasiswa";
        String status = null;
        
        try {
            st = con.createStatement();
            rs = st.executeQuery(query);
            
            Object[] row = new Object[4];
            int no = 0;
            while(rs.next()){
                //row[0] = ++no;
                row[0] = rs.getInt("nis");
                row[1] = rs.getString("nama");
                row[2] = rs.getString("asal_sekolah");
                model.addRow(row);
            }            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void executeSQLQuery(String query, String pesan, int check)
    {
        Statement st;
        ResultSet rs;
        String queryCheck = "call checkNIS('"+ tfNIS.getText() +"')";
        boolean checkNIS = (check == 1) ? false:tfNIS.getText().equals(nisSiswa);

        try{
            st = con.createStatement();
            rs = st.executeQuery(queryCheck);
            if(check == 1 || check == 2){
                if(!rs.next() || checkNIS){
                    if(st.executeUpdate(query)>0){
                        RefreshPage();
                        JOptionPane.showMessageDialog(null, "Data " + pesan+ " Succesfully");
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Data Not " + pesan);            
                    }
                } else{
                    JOptionPane.showMessageDialog(null, "NIS Sudah Tedaftar");
                }
            } else{
                if(st.executeUpdate(query)>0){
                    RefreshPage();
                    JOptionPane.showMessageDialog(null, "Data " + pesan+ " Succesfully");
                } 
                else{
                    JOptionPane.showMessageDialog(null, "Data Not " + pesan);
                }
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public void RefreshPage(){
        DefaultTableModel model = (DefaultTableModel)tblSiswa.getModel();
        model.setRowCount(0);
        showSiswa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSiswa = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblNama = new javax.swing.JLabel();
        tfNIS = new javax.swing.JTextField();
        lblNIS = new javax.swing.JLabel();
        tfNama = new javax.swing.JTextField();
        lblAgama = new javax.swing.JLabel();
        tfAgama = new javax.swing.JTextField();
        tfNoTlp = new javax.swing.JTextField();
        cbJk = new javax.swing.JComboBox<>();
        lblTl = new javax.swing.JLabel();
        lblJl = new javax.swing.JLabel();
        lblNoTelp = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        jdTl = new com.toedter.calendar.JDateChooser();
        tfNamaAyah = new javax.swing.JTextField();
        lblNamaAyah = new javax.swing.JLabel();
        lblNamaIbu = new javax.swing.JLabel();
        tfNamaIbu = new javax.swing.JTextField();
        lblAsalSekolah = new javax.swing.JLabel();
        tfAsalSekolah = new javax.swing.JTextField();
        lblKelas = new javax.swing.JLabel();
        cbKelas = new javax.swing.JComboBox<>();

        setFocusCycleRoot(false);
        setFocusable(false);
        setPreferredSize(new java.awt.Dimension(730, 480));
        setRequestFocusEnabled(false);

        tblSiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIS", "NAMA SISWA", "ASAL SEKOLAH"
            }
        ));
        tblSiswa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblSiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSiswaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSiswa);

        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-add.png"))); // NOI18N
        btnAdd.setText("TAMBAH");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-making_notes.png"))); // NOI18N
        btnEdit.setText("EDIT");
        btnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-delete_trash.png"))); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblNama.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNama.setText("NAMA:");

        lblNIS.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNIS.setText("NIS:");

        lblAgama.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAgama.setText("AGAMA:");

        tfNoTlp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNoTlpKeyTyped(evt);
            }
        });

        cbJk.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pria", "Wanita" }));

        lblTl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTl.setText("TANGGAL LAHIR:");

        lblJl.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblJl.setText("JENIS KELAMIN:");

        lblNoTelp.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNoTelp.setText("NO TELP:");

        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-reset.png"))); // NOI18N
        btnReset.setText("RESET");
        btnReset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        jdTl.setDateFormatString("dd/MM/yyyy");

        lblNamaAyah.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNamaAyah.setText("NAMA AYAH:");

        lblNamaIbu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNamaIbu.setText("NAMA IBU:");

        lblAsalSekolah.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAsalSekolah.setText("ASAL SEKOLAH:");

        lblKelas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblKelas.setText("KELAS:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfAgama, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAgama))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfNamaIbu, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNamaIbu))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAsalSekolah)
                            .addComponent(tfAsalSekolah, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNIS)
                            .addComponent(lblNama)
                            .addComponent(tfNIS, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTl)
                            .addComponent(jdTl, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNamaAyah)
                            .addComponent(tfNamaAyah, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbKelas, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblKelas))
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfNoTlp, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblNoTelp)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbJk, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblJl)))))
                    .addComponent(tfNama, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNoTelp)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNIS)
                        .addComponent(lblTl)
                        .addComponent(lblKelas)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jdTl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfNoTlp)
                        .addComponent(cbKelas, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tfNIS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblJl, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNamaAyah)
                        .addComponent(lblNama)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbJk, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfNamaAyah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfNama)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAgama)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNamaIbu)
                        .addComponent(lblAsalSekolah)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfAgama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfAsalSekolah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tfNamaIbu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete)
                    .addComponent(btnReset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblSiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSiswaMouseClicked
        DefaultTableModel model = (DefaultTableModel)tblSiswa.getModel();
        int i = tblSiswa.getSelectedRow();
        nisSiswa = (model.getValueAt(i, 0).toString());
        Statement st;
        ResultSet rs;
        
        String query = "SELECT * FROM datasiswa AS d INNER JOIN user AS u ON d.nis = u.username WHERE nis ="+nisSiswa;
        String status = null;
        try {
            st = con.createStatement();
            rs = st.executeQuery(query);
            while(rs.next()){
                tfNIS.setText(rs.getString("nis"));
                tfNama.setText(rs.getString("nama"));
                jdTl.setDate((java.util.Date) rs.getObject("tanggal_lahir"));
                if(rs.getInt("jenis_kelamin") == 1){
                    cbJk.setSelectedIndex(0);
                } else if(rs.getInt("jenis_kelamin") == 2){
                    cbJk.setSelectedIndex(1);
                }
                for(int x=0; x<cbKelas.getItemCount(); x++){
                    if(rs.getString("id_kelas").equals(idKelas.arr[x])){
                        cbKelas.setSelectedIndex(x);
                    }
                }
                tfAgama.setText(rs.getString("agama"));
                tfNoTlp.setText(rs.getString("no_telp"));
                tfNamaAyah.setText(rs.getString("nama_ayah"));
                tfNamaIbu.setText(rs.getString("nama_ibu"));
                tfAsalSekolah.setText(rs.getString("asal_sekolah"));

//                jpPassword.setText(rs.getString("password"));
            }
            
//            rs = st.executeQuery(query2);
            
        } catch (Exception e) {
            e.printStackTrace();
        }

//        tfNPM.setText(model.getValueAt(i, 0).toString());
//        tfNama.setText(model.getValueAt(i, 1).toString());
//        cbAngkatan.getModel().setSelectedItem(model.getValueAt(i, 2).toString());

    }//GEN-LAST:event_tblSiswaMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if(checkField() == 1){
            int jenisKelamin, status;
            int kelas = idKelas.arr[cbKelas.getSelectedIndex()];
            Date date = new Date(jdTl.getDate().getTime());
            if(cbJk.getSelectedItem().toString().toLowerCase().equals("pria")){
                jenisKelamin = 1;
            } else{
                jenisKelamin = 2;
            }

            String querySiswa = "call createSiswa('"+tfNIS.getText()+"', '"+Utility.capitalizeWord(tfNama.getText())+"', '"+date+"', '"+jenisKelamin+"', '"+Utility.capitalizeWord(tfAgama.getText())+"', '"+tfNoTlp.getText()+"', '"+Utility.capitalizeWord(tfNamaAyah.getText())+"', '"+Utility.capitalizeWord(tfNamaIbu.getText())+"', '"+Utility.capitalizeWord(tfAsalSekolah.getText())+"', '"+kelas+"', '"+Utility.getMd5(tfNIS.getText())+"')";
            executeSQLQuery(querySiswa, "Inserted", 1);
        } else{
            JOptionPane.showMessageDialog(this, "Isi Semua Field!");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        if(nisSiswa.isEmpty()){
            JOptionPane.showMessageDialog(this, "Pilih Data Yang Ingin Di Edit!");
        } else{
            int conf;
                conf = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Ingin Mengedit Data Ini?",
                    "Warning",JOptionPane.WARNING_MESSAGE);
                if(conf == 0){
                    int jenisKelamin, status;
                    int kelas = idKelas.arr[cbKelas.getSelectedIndex()];

                    Date date = new Date(jdTl.getDate().getTime());
                    if(cbJk.getSelectedItem().toString().toLowerCase().equals("pria")){
                        jenisKelamin = 1;
                    } else{
                        jenisKelamin = 2;
                    }

                    String query = "call editSiswa('"+tfNIS.getText()+"','" +Utility.capitalizeWord(tfNama.getText())+"','"+date+"','" +jenisKelamin+"','" +Utility.capitalizeWord(tfAgama.getText())+"','" +tfNoTlp.getText()+"','" +Utility.capitalizeWord(tfNamaAyah.getText())+"','" +Utility.capitalizeWord(tfNamaIbu.getText())+"','" +tfAsalSekolah.getText().toUpperCase()+"','" +kelas+"','" +tfNIS.getText()+"','" +nisSiswa+"')";
                    executeSQLQuery(query, "Updated", 2);
                }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if(nisSiswa.isEmpty())
         {
             JOptionPane.showMessageDialog(this, "Pilih Data Yang Ingin Di Hapus!");          
         }
         else{
            int conf;
            conf = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Ingin Menghapus Data Ini?",
                    "Warning",JOptionPane.WARNING_MESSAGE);
            if(conf == 0){
                String query = "call deleteSiswa('"+ nisSiswa +"')";
                executeSQLQuery(query, "Deleted", 3);
            }
         }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        tfNIS.setText("");
        tfNama.setText("");
        tfAgama.setText("");
        tfNoTlp.setText("");
        tfAsalSekolah.setText("");
        tfNamaAyah.setText("");
        tfNamaIbu.setText("");
        
        jdTl.setDate(null);
        cbJk.setSelectedIndex(0);
    }//GEN-LAST:event_btnResetActionPerformed

    private void tfNoTlpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNoTlpKeyTyped
        char c = evt.getKeyChar();
        if ( ((c < '0') || (c > '9')) && (c != KeyEvent.VK_BACK_SPACE)) {
                  evt.consume();
        }
    }//GEN-LAST:event_tfNoTlpKeyTyped
     
    public int checkField(){
        if(
                tfNIS.getText().trim().isEmpty() ||
                tfNama.getText().trim().isEmpty() ||
                tfAsalSekolah.getText().trim().isEmpty() ||
                tfNamaAyah.getText().trim().isEmpty() ||
                tfNamaIbu.getText().trim().isEmpty() ||
                jdTl.getDateFormatString().trim().isEmpty() ||
                cbJk.getSelectedItem().toString().trim().isEmpty() ||
                tfAgama.getText().trim().isEmpty() ||
                tfNoTlp.getText().trim().isEmpty() ||
                cbKelas.getSelectedItem().toString().trim().isEmpty() 
                ) {
            return 0;
        } else{
            return 1;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox<String> cbJk;
    private javax.swing.JComboBox<String> cbKelas;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdTl;
    private javax.swing.JLabel lblAgama;
    private javax.swing.JLabel lblAsalSekolah;
    private javax.swing.JLabel lblJl;
    private javax.swing.JLabel lblKelas;
    private javax.swing.JLabel lblNIS;
    private javax.swing.JLabel lblNama;
    private javax.swing.JLabel lblNamaAyah;
    private javax.swing.JLabel lblNamaIbu;
    private javax.swing.JLabel lblNoTelp;
    private javax.swing.JLabel lblTl;
    private javax.swing.JTable tblSiswa;
    private javax.swing.JTextField tfAgama;
    private javax.swing.JTextField tfAsalSekolah;
    private javax.swing.JTextField tfNIS;
    private javax.swing.JTextField tfNama;
    private javax.swing.JTextField tfNamaAyah;
    private javax.swing.JTextField tfNamaIbu;
    private javax.swing.JTextField tfNoTlp;
    // End of variables declaration//GEN-END:variables
}
